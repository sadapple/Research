Posdef <- function (n, ev = runif(n, 0, 50))
{
  Z <- matrix(ncol=n, rnorm(n^2))
  decomp <- qr(Z)
  Q <- qr.Q(decomp)
  R <- qr.R(decomp)
  d <- diag(R)
  ph <- d / abs(d)
  O <- Q %*% diag(ph)
  Z <- t(O) %*% diag(ev) %*% O
  return(Z)
}


## comparison

InvUpdate1 <- function(A,act,nonact,index){

act <- act[-which(act==index)]
nonact <- sort(c(nonact,index))
C <- solve(A[act,act,drop=FALSE])
return(C)
}

InvUpdate2 <- function(A,act,nonact,index){

    
    o1 <- which(act==index)
    o2 <- length(act)
    index.vec <- A[-c(nonact,index),index,drop=FALSE]
    Inv <- solve(A[act,act,drop=FALSE])
    ## Inv[,c(o1,o2)] <- Inv[,c(o2,o1)]    # These two line of codes fail to keep the order structure of the set act.
    ## Inv[c(o1,o2),] <- Inv[c(o2,o1),]    # Main problems detected here
    
    
    block3 <- Inv[c(1:(o2-1)),c(1:(o2-1)),drop=FALSE]
    block4 <- (block3%*%index.vec%*%t(index.vec)%*%block3)/(A[index,index]+as.numeric(t(index.vec)%*%block3%*%index.vec))
    B <- block3-block4
    return(B)
}


A <- matrix(c(5,2,2,1),nrow = 2)
A <- Posdef(n=3)
act <- c(1:3)
nonact <- integer()
index <- 1

InvUpdate1(A=A,act=act,nonact = nonact,index=index)
InvUpdate2(A=A,act=act,nonact = nonact,index=index)



### simulation
## Scene 1
index.vec <- A[act,index,drop=FALSE] # the covariance matrix values for the (act,index) block
d1 <- length(act)
vec1 <- c(rep(0,d1),1)
block1 <- cbind(diag(1,d1),-Inv%*%index.vec)
M1 <- rbind(block1,vec1)

vec2 <- c(rep(0,d1),1/(A[index,index]-as.numeric(t(index.vec)%*%Inv%*%index.vec)))
block2 <- cbind(Inv,rep(0,d1))
M2 <- rbind(block2,vec2)

Inv1 <- M1%*%M2%*%t(M1)
o1 <- which(sort(c(act,index))==index)
o2 <- d1+1
Inv1[,c(o1,o2)] <- Inv1[,c(o2,o1)]
Inv1[c(o1,o2),] <- Inv1[c(o2,o1),]
Inv <- Inv1


## Scene 2
d1 <- length(act)
o1 <- which(act==index)
o2 <- d1
index.vec2 <- A[-c(nonact,index),index,drop=FALSE]
Inv[,c(o1,o2)] <- Inv[,c(o2,o1)]
Inv[c(o1,o2),] <- Inv[c(o2,o1),]

block3 <- Inv[c(1:(d1-1)),c(1:(d1-1))]
block4 <- (block3%*%index.vec2%*%t(index.vec2)%*%block3)*(1/(A[index,index]+as.numeric(t(index.vec2)%*%block3%*%index.vec2)))
Inv <- block3-block4



Inv <- Inv[c(1:(d1-1)),c(1:(d1-1))]- (Inv[c(1:(d1-1)),c(1:(d1-1))]%*%index.vec2%*%t(index.vec2)%*%Inv[c(1:(d1-1)),c(1:(d1-1))])*(1/(A[index,index]+as.numeric(t(index.vec2)%*%Inv[c(1:(d1-1)),c(1:(d1-1))]%*%index.vec2)))


